// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// wks
Rcpp::NumericVector wks(const arma::vec& gex, const Rcpp::List& gss, const arma::vec& mus, const arma::vec& sds);
RcppExport SEXP _Seqtometry_wks(SEXP gexSEXP, SEXP gssSEXP, SEXP musSEXP, SEXP sdsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type gex(gexSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type gss(gssSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type mus(musSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type sds(sdsSEXP);
    rcpp_result_gen = Rcpp::wrap(wks(gex, gss, mus, sds));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_Seqtometry_wks", (DL_FUNC) &_Seqtometry_wks, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_Seqtometry(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
